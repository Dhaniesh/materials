Arrays and strings

2239. Find Closest Number to Zero
Given an integer array nums of size n, return the number with the value closest to 0 in nums. If there are multiple answers, return the number with the largest value.
Input: nums = [-4,-2,1,4,8]
Output: 1
Input: nums = [2,-1,1]
Output: 1
Explanation: 1 and -1 are both the closest numbers to 0, so 1 being larger is returned.
- abs of cur and track
- if abs are same, check for max

1768. Merge Strings Alternately
You are given two strings word1 and word2. Merge the strings by adding letters in alternating order, starting with word1. If a string is longer than the other, append the additional letters onto the end of the merged string.
Input: word1 = "abc", word2 = "pqr"
Output: "apbqcr"
- two pointer, while or, merge, merge rest when condition fails

13. Roman to Integer
Input: s = "LVIII"
Output: 58
- 2 pointer pair, reverse, if cur is large, add, else sub

392. Is Subsequence
Given two strings s and t, return true if s is a subsequence of t, or false otherwise.
Input: s = "abc", t = "ahbgdc"
Output: true
- two pointers, iterate and move, 3 var to mark count, if it is same as len(s), true, else false

14. Longest Common Prefix
Write a function to find the longest common prefix string amongst an array of strings.
If there is no common prefix, return an empty string "".
Input: strs = ["flower","flow","flight"]
Output: "fl"
- calculate adj prefix

228. Summary Ranges
Return the smallest sorted list of ranges that cover all the numbers in the array exactly. That is, each element of nums is covered by exactly one of the ranges, and there is no integer x such that x is in one of the ranges but not in nums.
Each range [a,b] in the list should be output as:
"a->b" if a != b
"a" if a == b
Input: nums = [0,1,2,4,5,7]
Output: ["0->2","4->5","7"]
- two pointers

238. Product of Array Except Self
- product left, right, merge

HASHMAP
36. Valid Sudoku
- hash for row, col, and for box, use predefined list of box indexes

49. Group Anagrams
- hash every word, use defaultdict and store word

TWO POINTERS

977. Squares of a Sorted Array
Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order.
Input: nums = [-4,-1,0,3,10]
Output: [0,1,9,16,100]
- two pointer, create new array, fill it from end

42. Trapping Rain Water
Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
- two pointer, 2 arrays, leftmx and rightmx, water of a bar = min(l, r) - height_bar

BINARY SEARCH
34. Find First and Last Position of Element in Sorted Array
Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]
- use bs, upper bound and lower bound, use bias when ==

278. First Bad Version
- lower bound

367. Valid Perfect Square
Input: num = 16
Output: true
Explanation: We return true because 4 * 4 = 16 and 4 is an integer.
Input: num = 14
Output: false
Explanation: We return false because 3.742 * 3.742 = 14 and 3.742 is not an integer.
- bs, r = num

74. Search a 2D Matrix
Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3
Output: true
- two bs, one to search the array, another to search within the array
- use a single bs, use indicies to calculate matrix[row][col] (hint: mid//n, mid%n)

153. Find Minimum in Rotated Sorted Array
- if mid is greater that last element, right is smaller, else serach in left

33. Search in Rotated Sorted Array
- use m and l, then m, l, and target, same for right

81. Search in Rotated Sorted Array II
- use m and l, then m, l, and target, same for right (edge case: l == m == r)

540. Single Element in a Sorted Array
- int: indexes will be in pair if it occurs twice, use this to traverse the array

162. Find Peak Element
- int: edge cases, else use bs
- int2: right and left elements, check index as well

209. Minimum Size Subarray Sum
Input: target = 7, nums = [2,3,1,2,4,3] Output: 2
- sliding window

643. Maximum Average Subarray I
Input: nums = [1,12,-5,-6,50,3], k = 4
Output: 12.75000
Explanation: Maximum average is (12 - 5 - 6 + 50) / 4 = 51 / 4 = 12.75
- sliding window, do the average when returning

1004. Max Consecutive Ones III
Input: nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2
Output: 6
Explanation: [1,1,1,0,0,1,1,1,1,1,1]
Bolded numbers were flipped from 0 to 1. The longest subarray is underlined.
- sliding window, 

3. Longest Substring Without Repeating Characters
Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
- sliding window, use a set to track the Characters

205. Isomorphic Strings
Input: s = "egg", t = "add" Output: true, Input: s = "badc", t = "baba"
Output: false
- use s->t and t->s mapping, only a single mapping should be valid, if not, it's not an Isomorphic string

LINKED LIST

83. Remove Duplicates from Sorted List
- use while loop, if == assign next to next.next, else next

206. Reverse Linked List
Input: head = [1,2,3,4,5]
Output: [5,4,3,2,1]
- use head and prev, traverse and reverse (ðŸ§ : should I return head or prev at the end)

21. Merge Two Sorted Lists
Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]
- use a dummy node, traverse through smaller values, check if both are traversed
- (ðŸ§ : if either of the one is not discovered, it's not req to traverse, just point the cur node to the undiscovered link)

876. Middle of the Linked List
Input: head = [1,2,3,4,5]
Output: [3,4,5]
Explanation: The middle node of the list is node 3.
- slow and fast, use a count variable to store binary, flip each time with fast, if count move slow

141. Linked List Cycle
- a1: use a slow and fast node
- a2: use set to keep track of id

19. Remove Nth Node From End of List
Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]
- traverse the leader, follower then follows, (edge case: if len and n are equal, means the first element, return head.next)