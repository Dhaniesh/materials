
BINARY SEARCH

981. Time Based Key-Value Store (Binary search)

Design a time-based key-value data structure that can store multiple values for the same key at different time stamps and retrieve the key's value at a certain timestamp.

Input
["TimeMap", "set", "get", "get", "set", "get", "get"]
[[], ["foo", "bar", 1], ["foo", 1], ["foo", 3], ["foo", "bar2", 4], ["foo", 4], ["foo", 5]]

Output
[null, null, "bar", "bar", null, "bar2", "bar2"]

Intuition
- use hashmap to initialize the object
- assign value using set method
- use binary search to search for value


SLIDING WINDOW

3. Longest Substring Without Repeating Characters
Given a string s, find the length of the longest substring without duplicate characters.
Input: s = "abcabcbb" Output: 3
Explanation: The answer is "abc", with the length of 3.

- use two pointers, l, r = 0, 0
- use a set to store occurence
- for every increment: r++, check if s[r] not in set: add to set and update max length
- else: remove elements from left until the set becomes clean (check and remove elements from set), then add right